(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{428:function(e,t,v){"use strict";v.r(t);var _=v(42),l=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"websocket"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[e._v("#")]),e._v(" WebSocket")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("为什么要有 WebSocket？")]),e._v(" "),v("p",[e._v("HTTP/2 针对的是“队头阻塞”")]),e._v(" "),v("p",[e._v("WebSocket 针对的是**“请求 - 应答”**通信模式。")]),e._v(" "),v("p",[e._v("半双工：请求-应答")]),e._v(" "),v("ul",[v("li",[e._v("双向收发数据，但同一时刻只能一个方向上有动作，传输效率低")]),e._v(" "),v("li",[e._v("“被动”通信模式：服务器只能“被动”响应客户端的请求，无法主动向客户端发送数据。")])]),e._v(" "),v("blockquote",[v("p",[e._v("为了克服 HTTP“请求 - 应答”模式的缺点，WebSocket 就“应运而生”了。它原来是 HTML5 的一部分，后来“自立门户”，形成了一个单独的标准，RFC 文档编号是 6455。")])])]),e._v(" "),v("li",[v("p",[e._v("WebSocket 的特点")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("全双工：客户端和服务器都可以随时向对方发送数据")])]),e._v(" "),v("li",[v("p",[e._v("二进制帧结构：结束标志位 + 操作码 + 帧长度 + 掩码")]),e._v(" "),v("ul",[v("li",[e._v("FIN")]),e._v(" "),v("li",[e._v("Opcode")]),e._v(" "),v("li",[e._v("MASK")]),e._v(" "),v("li",[e._v("Payload len")]),e._v(" "),v("li",[e._v("Masking-key")])]),e._v(" "),v("p",[v("a",{attrs:{"data-fancybox":"",title:"",href:"https://static001.geekbang.org/resource/image/29/c4/29d33e972dda5a27aa4773eea896a8c4.png"}},[v("img",{attrs:{src:"https://static001.geekbang.org/resource/image/29/c4/29d33e972dda5a27aa4773eea896a8c4.png",alt:""}})])])]),e._v(" "),v("li",[v("p",[e._v("协议名")]),e._v(" "),v("ul",[v("li",[e._v("“ws”：明文 WebSocket 协议")]),e._v(" "),v("li",[e._v("“wss”：加密的 WebSocket 协议")])])]),e._v(" "),v("li",[v("p",[e._v("默认端口：80 和 443")])])])]),e._v(" "),v("li",[v("p",[e._v("WebSocket 的握手")]),e._v(" "),v("ol",[v("li",[e._v("标准的 HTTP GET 请求")])]),e._v(" "),v("ul",[v("li",[e._v("但要带上两个协议升级的专用头字\n"),v("ul",[v("li",[e._v("“Connection: Upgrade”，表示要求协议“升级”；")]),e._v(" "),v("li",[e._v("“Upgrade: websocket”，表示要“升级”成 WebSocket 协议")])])]),e._v(" "),v("li",[e._v("为了防止普通的 HTTP 消息被“意外”识别成 WebSocket，握手消息还增加了两个额外的认证用头字段\n"),v("ul",[v("li",[e._v("Sec-WebSocket-Key：一个 Base64 编码的 16 字节随机数，作为简单的认证密钥；")]),e._v(" "),v("li",[e._v("Sec-WebSocket-Version：协议的版本号，当前必须是 13。")])])])]),e._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[e._v("服务器收到 HTTP 请求报文，看到上面的四个字段，就知道这不是一个普通的 GET 请求，而是 WebSocket 的升级请求，于是就不走普通的 HTTP 处理流程，而是构造一个特殊的“"),v("strong",[e._v("101 Switching Protocols")]),e._v("”响应报文")])])])]),e._v(" "),v("h3",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),v("p",[e._v("WebSocket 虽然是在应用层，但使用方式却与“TCP Socket”差不多，过于“原始”，用户必须自己管理连接、缓存、状态，开发上比 HTTP 复杂的多，所以是否要在项目中引入 WebSocket 必须慎重考虑。")]),e._v(" "),v("ol",[v("li",[e._v("HTTP 的“请求 - 应答”模式不适合开发“实时通信”应用，效率低，难以实现动态页面，所以出现了 WebSocket；")]),e._v(" "),v("li",[e._v("WebSocket 是一个“全双工”的通信协议，相当于对 TCP 做了一层“薄薄的包装”，让它运行在浏览器环境里；")]),e._v(" "),v("li",[e._v("WebSocket 使用兼容 HTTP 的 URI 来发现服务，但定义了新的协议名“ws”和“wss”，端口号也沿用了 80 和 443；")]),e._v(" "),v("li",[e._v("WebSocket 使用二进制帧，结构比较简单，特殊的地方是有个“掩码”操作，客户端发数据必须掩码，服务器则不用；")]),e._v(" "),v("li",[e._v("WebSocket 利用 HTTP 协议实现连接握手，发送 GET 请求要求“协议升级”，握手过程中有个非常简单的认证机制，目的是防止误连接。")])])])}),[],!1,null,null,null);t.default=l.exports}}]);