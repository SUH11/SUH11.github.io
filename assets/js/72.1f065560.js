(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{419:function(t,_,v){"use strict";v.r(_);var a=v(42),s=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"https的优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https的优化"}},[t._v("#")]),t._v(" HTTPS的优化")]),t._v(" "),v("p",[t._v("HTTPS 连接大致上可以划分为两个部分")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("建立连接时的非对称加密握手")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("“HTTPS 连接慢”：指的就是刚开始建立连接的那段时间")]),t._v(" "),v("ul",[v("li",[t._v("比http多一个TLS握手")])])]),t._v(" "),v("li",[v("p",[t._v("“隐形”消耗")]),t._v(" "),v("ul",[v("li",[t._v("产生用于密钥交换的临时公私钥对（ECDHE）；")]),t._v(" "),v("li",[t._v("验证证书时访问 CA 获取 CRL 或者 OCSP；")]),t._v(" "),v("li",[t._v("非对称加密解密处理“Pre-Master”。")])]),t._v(" "),v("p",[v("a",{attrs:{"data-fancybox":"",title:"https优化点",href:"https://static001.geekbang.org/resource/image/c4/ed/c41da1f1b1bdf4dc92c46330542c5ded.png"}},[v("img",{attrs:{src:"https://static001.geekbang.org/resource/image/c4/ed/c41da1f1b1bdf4dc92c46330542c5ded.png",alt:"https优化点"}})])])])])]),t._v(" "),v("li",[v("p",[t._v("握手后的对称加密报文传输")])])]),t._v(" "),v("h4",{attrs:{id:"优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),v("ol",[v("li",[v("h4",{attrs:{id:"硬件优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#硬件优化"}},[t._v("#")]),t._v(" 硬件优化")]),t._v(" "),v("p",[t._v("HTTPS 连接是"),v("strong",[t._v("计算密集型")]),t._v("，而不是 I/O 密集型。所以，如果你花大价钱去买网卡、带宽、SSD 存储就是“南辕北辙”了，起不到优化的效果。")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("更快的 CPU")])]),t._v(" "),v("li",[v("strong",[t._v("SSL 加速卡")]),t._v(" "),v("ul",[v("li",[t._v("缺点：比如升级慢、支持算法有限，不能灵活定制解决方案等。")])])]),t._v(" "),v("li",[v("strong",[t._v("SSL 加速服务器")])])])]),t._v(" "),v("li",[v("h4",{attrs:{id:"软件优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#软件优化"}},[t._v("#")]),t._v(" 软件优化")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("软件升级")]),t._v(" "),v("ul",[v("li",[t._v("把现在正在使用的软件尽量升级到最新版本")])])]),t._v(" "),v("li",[v("p",[t._v("协议优化")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("尽量采用 TLS1.3")])]),t._v(" "),v("blockquote",[v("p",[t._v("它大幅度简化了握手的过程，完全握手只要 1-RTT，而且更加安全。")])])])])])])]),t._v(" "),v("li",[v("h4",{attrs:{id:"证书优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#证书优化"}},[t._v("#")]),t._v(" 证书优化")]),t._v(" "),v("p",[t._v("握手过程中的证书验证也是一个比较耗时的操作，服务器需要把自己的证书链全发给客户端，然后客户端接收后再逐一验证。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("证书传输")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("选择"),v("strong",[t._v("椭圆曲线（ECDSA）证书")]),t._v("而不是 RSA 证书")]),t._v(" "),v("blockquote",[v("p",[t._v("因为 224 位的 ECC 相当于 2048 位的 RSA，所以椭圆曲线证书的“个头”要比 RSA 小很多，即能够节约带宽也能减少客户端的运算量")])])])])]),t._v(" "),v("li",[v("p",[t._v("证书验证")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("除了要公钥解密验证多个证书签名外，因为证书还有可能会被撤销失效，客户端有时还会再去访问 CA，下载 CRL 或者 OCSP 数据，这又会产生 DNS 查询、建立连接、收发数据等一系列网络通信，增加好几个 RTT。")]),t._v(" "),v("blockquote",[v("p",[t._v("CRL：证书吊销列表")]),t._v(" "),v("p",[t._v("现在 CRL 基本上不用了，取而代之的是 OCSP：在线证书状态协议，向 CA 发送查询请求，让 CA 返回证书的有效状态。")])])])])])])]),t._v(" "),v("li",[v("h4",{attrs:{id:"会话复用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#会话复用"}},[t._v("#")]),t._v(" 会话复用")]),t._v(" "),v("p",[t._v("我们再回想一下 HTTPS 建立连接的过程：先是 TCP 三次握手，然后是 TLS 一次握手。这后一次握手的重点是算出主密钥“Master Secret”，而主密钥每次连接都要重新计算，未免有点太浪费了，"),v("strong",[t._v("如果能够把“辛辛苦苦”算出来的主密钥缓存一下“重用”，不就可以免去了握手和计算的成本了吗？")])]),t._v(" "),v("p",[t._v("会话复用")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("Session ID")]),t._v(" "),v("ul",[v("li",[t._v("客户端和服务器首次连接后各自保存一个会话的 ID 号，内存里存储主密钥和其他相关的信息。当客户端再次连接时发一个 ID 过来，服务器就在内存里找，找到就直接用主密钥恢复会话状态，跳过证书验证和密钥交换，只用一个消息往返就可以建立安全通信。")]),t._v(" "),v("li",[t._v("缺点：服务器必须保存每一个客户端的会话数据，对于拥有百万、千万级别用户的网站来说存储量就成了大问题，加重了服务器的负担。")])])]),t._v(" "),v("li",[v("strong",[t._v("Session Ticket")]),t._v(" "),v("ul",[v("li",[t._v("会话票证")]),t._v(" "),v("li",[t._v("存储的责任由服务器转移到了客户端")]),t._v(" "),v("li",[t._v("重连的时候，客户端使用扩展“session_ticket”发送“Ticket”而不是“Session ID”，服务器解密后验证有效期，就可以恢复会话，开始加密通信。")])])])])]),t._v(" "),v("li",[v("h4",{attrs:{id:"预共享密钥"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#预共享密钥"}},[t._v("#")]),t._v(" 预共享密钥")]),t._v(" "),v("p",[t._v("“False Start”“Session ID”“Session Ticket”等方式只能实现 1-RTT，而 TLS1.3 更进一步实现了“0-RTT”，原理和“Session Ticket”差不多，但在发送 Ticket 的同时会带上应用数据（"),v("strong",[t._v("Early Data")]),t._v("），免去了 1.2 里的服务器确认步骤，这种方式叫“"),v("strong",[t._v("Pre-shared Key”")]),t._v("，简称为“PSK”。")]),t._v(" "),v("p",[v("a",{attrs:{"data-fancybox":"",title:"0rtt",href:"https://static001.geekbang.org/resource/image/11/ab/119cfd261db49550411a12b1f6d826ab.png"}},[v("img",{attrs:{src:"https://static001.geekbang.org/resource/image/11/ab/119cfd261db49550411a12b1f6d826ab.png",alt:"0rtt"}})])]),t._v(" "),v("p",[t._v("缺点：容易受到“重放攻击”（Replay attack）的威胁。黑客可以截获“PSK”的数据，像复读机那样反复向服务器发送。")]),t._v(" "),v("p",[t._v("解决办法：只允许安全的 GET/HEAD 方法（参见第 10 讲），在消息里加入时间戳、“nonce”验证，或者“一次性票证”限制重放。")])])]),t._v(" "),v("h3",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("ol",[v("li",[t._v("可以有多种硬件和软件手段减少网络耗时和计算耗时，让 HTTPS 变得和 HTTP 一样快，最可行的是软件优化；")]),t._v(" "),v("li",[t._v("应当尽量使用 ECDHE 椭圆曲线密码套件，节约带宽和计算量，还能实现“False Start”；")]),t._v(" "),v("li",[t._v("服务器端应当开启“OCSP Stapling”功能，避免客户端访问 CA 去验证证书；")]),t._v(" "),v("li",[t._v("会话复用的效果类似 Cache，前提是客户端必须之前成功建立连接，后面就可以用“Session ID”“Session Ticket”等凭据跳过密钥交换、证书验证等步骤，直接开始加密通信。")])])])}),[],!1,null,null,null);_.default=s.exports}}]);