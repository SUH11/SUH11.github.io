(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{444:function(t,e,l){"use strict";l.r(e);var n=l(42),v=Object(n.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"事件委托（事件代理）"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#事件委托（事件代理）"}},[t._v("#")]),t._v(" 事件委托（事件代理）")]),t._v(" "),l("p",[t._v("事件代理（Event Delegation），又称之为事件委托。是JavaScript中常用绑定事件的常用技巧。顾名思义，“事件代理”即是把原本需要绑定在子元素的响应事件（click、keydown......）委托给父元素，让父元素担当事件监听的职务。")]),t._v(" "),l("p",[t._v("事件代理的原理是DOM元素的"),l("strong",[t._v("事件冒泡")]),t._v("。")]),t._v(" "),l("blockquote",[l("p",[t._v("事件绑定的三种形式：")]),t._v(" "),l("ol",[l("li",[t._v("行内绑定")]),t._v(" "),l("li",[t._v("oUl.onclick = fn")]),t._v(" "),l("li",[t._v("oUl.addEventListener('click', function() {}, false) // false是冒泡，true是捕获")])])]),t._v(" "),l("p",[t._v("例子：")]),t._v(" "),l("p",[t._v("​\t有一个ul列表，包含了很多的li，")])])}),[],!1,null,null,null);e.default=v.exports}}]);